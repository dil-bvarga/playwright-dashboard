@use "../../../../styles";

/// Card
$card-background-color: #ffff;
$card-box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px,
  rgba(0, 0, 0, 0.24) 0px 1px 2px;
$statistics-card-max-width: 300px;
$statistics-sub-title-font-weight: 400;

/// Spinner
$mat-spinner-color: #2f3b4d;

/// Status colors
$flaky-title-color: #ee9b04;
$flaky-background-color: #ffcd3c;
$unexpected-background-color: #fe4949;
$skipped-background-color: #99a4b8;
$expected-background-color: #10ce66;

$sub-title-margin-bottom: 21px;

/// Expansion panel
$expansion-panel-background-color: #f6f8fa;
$expansion-panel-border-bottom: 1px solid #8080802e;
$folder-icon-color: #99a4b8;
$test-result-border-bottom: 1px solid #8080802e;
$test-title-container-max-width: 550px;
$test-title-font-size: 14px;
$test-title-font-weight: 500;
$test-run-rectangle-height: 25px;
$test-run-rectangle-border-radius: 2px;
$test-run-rectangle-minimized-width: 5px;

:host {
  padding: styles.$s7;
  display: block;
}

.card {
  padding: styles.$s7;
  background-color: $card-background-color;
  border-radius: styles.$s3;
  box-shadow: $card-box-shadow;
}

.statistics-dashboard-container {
  display: flex;
  flex-wrap: wrap;
  gap: styles.$s4;
  justify-content: space-around;

  .statistics-card-container {
    margin-bottom: styles.$s7;
    max-width: $statistics-card-max-width;
    display: flex;
    flex-direction: column;
    gap: styles.$s2;
    text-align: center;
    width: 100%;

    .sub-title {
      font-weight: $statistics-sub-title-font-weight;

      &.flaky {
        color: $flaky-title-color;
      }

      &.passed {
        color: $expected-background-color;
      }

      &.failed {
        color: $unexpected-background-color;
      }
    }

    .statistics-test-count {
      font-size: styles.$s9;
    }
  }
}

.spinner {
  margin-bottom: styles.$s7;
}

::ng-deep {
  /// Override mat spinner style
  .mat-mdc-progress-spinner circle,
  .mat-spinner circle {
    stroke: $mat-spinner-color;
  }

  /// Override mat accordion style
  .mat-accordion {
    display: flex;
    flex-direction: column;
    gap: styles.$s3;
  }
}

.title-container {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;

  .sub-title {
    margin-bottom: $sub-title-margin-bottom;
  }

  .filter-icon {
    margin-inline-start: styles.$s2;
  }

  .filter-container {
    display: flex;
    flex-wrap: wrap;
    margin-inline-start: auto;

    .last-run-count-select,
    .filter-select {
      margin-inline-start: styles.$s2;
    }
  }
}

.expansion-panel {
  .expansion-header {
    background-color: $expansion-panel-background-color;
    border-bottom: $expansion-panel-border-bottom;
    height: 100%;
  }

  .panel-title {
    display: flex;
    gap: styles.$s2;
    padding-top: styles.$s3;
    padding-bottom: styles.$s3;

    .folder-icon {
      color: $folder-icon-color;
    }

    .suite-title {
      font-size: styles.$s4;
    }

    .latest-suite-run-time {
      margin-top: styles.$s1;
      font-size: styles.$s3;
    }
  }

  ::ng-deep.mat-expansion-panel-body {
    padding: styles.$s4 styles.$s6 styles.$s4;
  }

  .test-result-container {
    display: flex;
    gap: styles.$s6;
    padding-inline-start: styles.$s9;

    &:not(:last-child) {
      margin-bottom: styles.$s3;
      border-bottom: $test-result-border-bottom;
      padding-bottom: styles.$s2;
    }

    .test-title-container {
      display: flex;
      flex-direction: column;

      max-width: $test-title-container-max-width;
      width: 100%;

      .test-title {
        font-size: $test-title-font-size;
        font-weight: $test-title-font-weight;
        word-break: break-word;
      }

      .test-line {
        font-size: styles.$s3;
        font-style: italic;
      }
    }

    .test-runs-column-container {
      display: flex;
      flex-wrap: wrap;
      gap: styles.$s1;
      width: 100%;

      .test-run-rectangle {
        width: styles.$s3;
        height: $test-run-rectangle-height;
        border-radius: $test-run-rectangle-border-radius;
        cursor: pointer;

        &.minimized {
          width: $test-run-rectangle-minimized-width;
        }

        &.expected {
          background-color: $expected-background-color;
        }

        &.skipped {
          background-color: $skipped-background-color;
        }

        &.unexpected {
          background-color: $unexpected-background-color;
        }

        &.flaky {
          background-color: $flaky-background-color;
        }
      }
    }
  }
}
